package com.csejnu.diary.Fragments;import android.annotation.SuppressLint;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.widget.SearchView;import androidx.fragment.app.Fragment;import androidx.recyclerview.widget.DividerItemDecoration;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import com.csejnu.diary.Adapter.FacultyAdapter;import com.csejnu.diary.Database.Database;import com.csejnu.diary.Model.Faculty;import com.csejnu.diary.R;import java.util.ArrayList;import java.util.List;import static androidx.recyclerview.widget.RecyclerView.VERTICAL;import static com.csejnu.diary.MainActivity.search_data;/** * Created by jhm69 */public class Dashboard extends Fragment {    String dept = "কম্পিউটার সায়েন্স এন্ড ইঞ্জিনিয়ারিং বিভাগ";    String title = "all";    int type = 1;    FacultyAdapter facultyAdapter;    LinearLayoutManager layoutManager;    RecyclerView recyclerView;    List<Faculty> facultyMembersNew;    public Dashboard(String dept, int type) {        this.dept = dept;        this.type = type;    }    @Nullable    @Override    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        return inflater.inflate(R.layout.fragment_main, container, false);    }    @SuppressLint("RestrictedApi")    @Override    public void onViewCreated(@NonNull final View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        Database db = new Database(getActivity());        List<Faculty> facultyMembers = new ArrayList<>();        if (type == 1) {            facultyMembers = db.getFacultiesByDeptName(dept);        } else {            facultyMembers = db.getAllFacultyFAB();        }        facultyMembersNew = new ArrayList<>();        facultyAdapter = new FacultyAdapter(facultyMembersNew, getContext());        layoutManager = new LinearLayoutManager(getContext());        recyclerView = view.findViewById(R.id.dsn);        recyclerView.setLayoutManager(new LinearLayoutManager(view.getContext(), VERTICAL, false));        recyclerView.addItemDecoration(new DividerItemDecoration(view.getContext(), DividerItemDecoration.VERTICAL));        recyclerView.setHasFixedSize(true);        recyclerView.setAdapter(facultyAdapter);        for (int i = 0; i < facultyMembers.size(); i++) {            facultyMembersNew.add(facultyMembers.get(i));            facultyAdapter = new FacultyAdapter(facultyMembersNew, getActivity());            recyclerView.setAdapter(facultyAdapter);            facultyAdapter.notifyDataSetChanged();        }    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setHasOptionsMenu(true);    }    @Override    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {        SearchView searchView = (SearchView) search_data.getActionView();        searchView.setMaxWidth(Integer.MAX_VALUE);        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {            @Override            public boolean onQueryTextSubmit(String query) {                return false;            }            @Override            public boolean onQueryTextChange(String newText) {                facultyAdapter.getFilter().filter(newText);                return true;            }        });        MenuItem sms = menu.findItem(R.id.sms);        sms.setVisible(type == 1);        super.onCreateOptionsMenu(menu, inflater);    }    @Override    public boolean onOptionsItemSelected(@NonNull MenuItem item) {        if (item.getItemId() == R.id.sms) {            sendAllSms(facultyMembersNew);        }        return super.onOptionsItemSelected(item);    }    @SuppressLint("RtlHardcoded")    private void sendAllSms(List<Faculty> m1) {        try {            StringBuilder toNumbers = new StringBuilder();            for (int i = 0; i < m1.size(); i++) {                toNumbers.append(m1.get(i).getNumber_home()).append(";");            }            toNumbers = new StringBuilder(toNumbers.substring(0, toNumbers.length() - 1));            Uri sendSmsTo = Uri.parse(toNumbers.toString());            startActivity(new Intent(Intent.ACTION_VIEW, Uri.fromParts("sms", String.valueOf(sendSmsTo), null)));        } catch (Exception ignored) {        }    }}