package com.csejnu.diary.Database;import android.annotation.SuppressLint;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import com.csejnu.diary.Model.Department;import com.csejnu.diary.Model.Faculty;import java.util.ArrayList;import java.util.List;public class Database extends SQLiteOpenHelper {    public static final String DATABASE_NAME = "JnuDairy_db";    public static final String CONTACTS_TABLE_NAME = "FacultyMembers";    public static final String CONTACTS_COLUMN_ID = "id";    public static final String CONTACTS_COLUMN_UID = "uid";    public static final String CONTACTS_COLUMN_NAME = "name";    public static final String CONTACTS_COLUMN_ONUSHOD = "onushod";    public static final String CONTACTS_COLUMN_TITLE = "title";    public static final String CONTACTS_COLUMN_DEPT = "dept";    public static final String CONTACTS_COLUMN_NUMBER_OFFICE = "number_home";    public static final String CONTACTS_COLUMN_NUMBER_HOME = "number_office";    public static final String CONTACTS_COLUMN_MAIL = "mail";    public static final String CONTACTS_COLUMN_FAX = "fax";    public Database(Context context) {        super(context, DATABASE_NAME, null, 1);    }    @Override    public void onCreate(SQLiteDatabase db) {        db.execSQL(                "CREATE TABLE "+ CONTACTS_TABLE_NAME + "(id integer PRIMARY KEY, uid text,name text, onushod text, title text,dept text,number_home text,number_office text, mail text, fax text)"        );    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {        db.execSQL("DROP TABLE IF EXISTS Recharges");        onCreate(db);    }    public void insertFaculty(Faculty faculty) {        SQLiteDatabase db = this.getWritableDatabase();        ContentValues contentValues = new ContentValues();        contentValues.put("uid", faculty.getUid());        contentValues.put("name", faculty.getName() );        contentValues.put("onushod", faculty.getOnushod());        contentValues.put("title", faculty.getTitle());        contentValues.put("dept", faculty.getDept());        contentValues.put("number_home", faculty.getNumber_home());        contentValues.put("number_office", faculty.getNumber_office());        contentValues.put("mail", faculty.getEmail());        contentValues.put("fax", faculty.getFax());        db.insert(CONTACTS_TABLE_NAME, null, contentValues);    }    public Cursor getData(int id) {        SQLiteDatabase db = this.getReadableDatabase();        return db.rawQuery("select * from "+CONTACTS_TABLE_NAME+" where id=" + id + "", null);    }    public Cursor getDataByUid(String uid) {        SQLiteDatabase db = this.getReadableDatabase();        @SuppressLint("Recycle") Cursor cursor = db.rawQuery("SELECT * FROM "                        + CONTACTS_TABLE_NAME + " where " + CONTACTS_COLUMN_UID + "=?",                new String[]{uid});        return db.rawQuery(String.valueOf(cursor), null);    }    public Integer deleteByUid(String uid) {        SQLiteDatabase db = this.getWritableDatabase();        return db.delete("+CONTACTS_TABLE_NAME+",                "uid = ? ",                new String[]{uid});    }    public List<Faculty> getAllFacultyMembers(){        List<Faculty> faculties = new ArrayList<>();        String query = "SELECT * FROM " +CONTACTS_TABLE_NAME+" ORDER BY "+"name"+" DESC";        SQLiteDatabase db = this.getReadableDatabase();        Cursor cursor = db.rawQuery(query,null);        if(cursor.moveToFirst()){            do {                Faculty faculty = new Faculty();                faculty.setUid(String.valueOf(cursor.getString(1)));                faculty.setName(String.valueOf(cursor.getString(2)));                faculty.setOnushod(String.valueOf(cursor.getString(3)));                faculty.setTitle(cursor.getString(4));                faculty.setDept(String.valueOf(cursor.getString(5)));                faculty.setNumber_home(String.valueOf(cursor.getString(6)));                faculty.setNumber_office(String.valueOf(cursor.getString(7)));                faculty.setEmail(String.valueOf(cursor.getString(8)));                faculty.setFax(String.valueOf(cursor.getString(9)));                faculties.add(faculty);            }while (cursor.moveToNext());        }        return faculties;    }    public Department getDepartment(String dept){        List<Faculty> faculties = new ArrayList<>();        String query = "SELECT * FROM " + CONTACTS_TABLE_NAME + "WHERE" + "dept =" + dept + " ORDER BY " + "name" + " DESC";        SQLiteDatabase db = this.getReadableDatabase();        Cursor cursor = db.rawQuery(query,null);        if(cursor.moveToFirst()){            do {                Faculty faculty = new Faculty();                faculty.setUid(String.valueOf(cursor.getString(1)));                faculty.setName(String.valueOf(cursor.getString(2)));                faculty.setOnushod(String.valueOf(cursor.getString(3)));                faculty.setTitle(cursor.getString(4));                faculty.setDept(String.valueOf(cursor.getString(5)));                faculty.setNumber_home(String.valueOf(cursor.getString(6)));                faculty.setNumber_office(String.valueOf(cursor.getString(7)));                faculty.setEmail(String.valueOf(cursor.getString(8)));                faculty.setFax(String.valueOf(cursor.getString(9)));                faculties.add(faculty);            } while (cursor.moveToNext());        }        return new Department(dept, faculties);    }    public List<Faculty> getFacultiesByDeptName(String dept) {        List<Faculty> faculties = new ArrayList<>();        SQLiteDatabase db = this.getReadableDatabase();        @SuppressLint("Recycle") Cursor cursor = db.rawQuery("SELECT * FROM "                        + CONTACTS_TABLE_NAME + " where " + CONTACTS_COLUMN_DEPT + "=?",                new String[]{dept});        if (cursor.moveToFirst()) {            do {                Faculty faculty = new Faculty();                faculty.setUid(String.valueOf(cursor.getString(1)));                faculty.setName(String.valueOf(cursor.getString(2)));                faculty.setOnushod(String.valueOf(cursor.getString(3)));                faculty.setTitle(cursor.getString(4));                faculty.setDept(String.valueOf(cursor.getString(5)));                faculty.setNumber_home(String.valueOf(cursor.getString(6)));                faculty.setNumber_office(String.valueOf(cursor.getString(7)));                faculty.setEmail(String.valueOf(cursor.getString(8)));                faculty.setFax(String.valueOf(cursor.getString(9)));                faculties.add(faculty);            }while (cursor.moveToNext());        }        return faculties;    }}