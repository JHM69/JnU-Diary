package com.csejnu.diary.Activity;import android.content.ContentUris;import android.content.ContentValues;import android.content.Intent;import android.graphics.Color;import android.graphics.PorterDuff;import android.net.Uri;import android.os.Bundle;import android.provider.ContactsContract;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.cardview.widget.CardView;import com.csejnu.diary.Database.Database;import com.csejnu.diary.Model.Faculty;import com.csejnu.diary.R;import java.util.Objects;public class DetailsActivity extends AppCompatActivity {    TextView nameTv, numberHomeTv, numberOfficeTv, mailTv, faxTv, deptTv, titleTv;    int x;    CardView addToFav, saveContact, callHome, callOffice;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_details);        Toolbar toolbar = findViewById(R.id.toolbars);        setSupportActionBar(toolbar);        Objects.requireNonNull(getSupportActionBar()).setDisplayHomeAsUpEnabled(true);        toolbar.getOverflowIcon().setColorFilter(Color.WHITE, PorterDuff.Mode.SRC_ATOP);        Intent intent = getIntent();        String uid = intent.getStringExtra("j");        Faculty faculty = new Database(getApplicationContext()).getFacultiesByUid(uid);        ImageView favi = findViewById(R.id.imageView3);        TextView favTv = findViewById(R.id.textView4);        nameTv = findViewById(R.id.namet);        numberHomeTv = findViewById(R.id.numHomeTv);        numberOfficeTv = findViewById(R.id.ast3);        mailTv = findViewById(R.id.ast5);        faxTv = findViewById(R.id.ast4);        deptTv = findViewById(R.id.mailt);        titleTv = findViewById(R.id.ast);        callHome = findViewById(R.id.call);        callOffice = findViewById(R.id.mail);        addToFav = findViewById(R.id.addTofab);        saveContact = findViewById(R.id.saveAsContact);        try {            nameTv.setText(faculty.getName());            if (!faculty.getNumber_office().equals(""))                numberOfficeTv.setText("অফিসঃ " + faculty.getNumber_office());            if (!faculty.getNumber_home().equals(""))                numberHomeTv.setText("বাসাঃ " + faculty.getNumber_home());            if (!faculty.getEmail().equals("")) mailTv.setText("ইমেইলঃ " + faculty.getEmail());            if (!faculty.getFax().equals("")) faxTv.setText("Fax:" + faculty.getFax());            titleTv.setText(faculty.getTitle());            deptTv.setText(faculty.getDept());            call(faculty.getNumber_home(), callHome);            call(faculty.getNumber_office(), callOffice);            if (faculty.getFav().equals("1")) {                x = 1;                favi.setBackgroundResource(R.drawable.ic_favorite_24px__1_);                favTv.setText("Added");            } else {                favi.setBackgroundResource(R.drawable.ic_favorite_border_24px);                favTv.setText("Add to Favorite");                x = 0;            }            saveContact.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    insertContactPhone(faculty);                    Toast.makeText(DetailsActivity.this, "Saved to contact!", Toast.LENGTH_SHORT).show();                }            });            addToFav.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    if (x == 0) {                        x = 1;                        faculty.setFav("1");                        new Database(getApplicationContext()).update(faculty.getFav(), faculty.getUid());                        favi.setBackgroundResource(R.drawable.ic_favorite_24px__1_);                        favTv.setText("Added");                    } else {                        x = 0;                        faculty.setFav("0");                        new Database(getApplicationContext()).update(faculty.getFav(), faculty.getUid());                        favi.setBackgroundResource(R.drawable.ic_favorite_border_24px);                        favTv.setText("Add to Favorite");                    }                }            });        } catch (NullPointerException j) {        }    }    void call(String number, CardView callx) {        callx.setOnClickListener(new View.OnClickListener() {  // <--- here            @Override            public void onClick(View v) {                Intent callIntent = new Intent(Intent.ACTION_CALL);                callIntent.setData(Uri.parse("tel:" + number));                startActivity(callIntent);            }        });    }    private void insertContactPhone(Faculty faculty) {        ContentValues p = new ContentValues();        p.put(ContactsContract.RawContacts.ACCOUNT_TYPE, "com.google");        p.put(ContactsContract.RawContacts.ACCOUNT_NAME, "email");        Uri rowcontect = getContentResolver().insert(ContactsContract.RawContacts.CONTENT_URI, p);        long rawcontectid = ContentUris.parseId(rowcontect);        ContentValues value = new ContentValues();        value.put(ContactsContract.Data.RAW_CONTACT_ID, rawcontectid);        value.put(android.provider.ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.StructuredName.CONTENT_ITEM_TYPE);        value.put(ContactsContract.CommonDataKinds.StructuredName.DISPLAY_NAME, faculty.getName());        getContentResolver().insert(android.provider.ContactsContract.Data.CONTENT_URI, value);        //adding the contents to the data        ContentValues ppv = new ContentValues();        ppv.put(android.provider.ContactsContract.Data.RAW_CONTACT_ID, rawcontectid);        ppv.put(android.provider.ContactsContract.Data.MIMETYPE, ContactsContract.CommonDataKinds.Phone.CONTENT_ITEM_TYPE);        ppv.put(ContactsContract.CommonDataKinds.Phone.NUMBER, faculty.getNumber_home());        ppv.put(ContactsContract.CommonDataKinds.Phone.TYPE, ContactsContract.CommonDataKinds.Phone.TYPE_HOME);        this.getContentResolver().insert(android.provider.ContactsContract.Data.CONTENT_URI, ppv);    }}